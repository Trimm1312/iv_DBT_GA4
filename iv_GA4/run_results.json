{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2024-01-16T17:19:36.664729Z", "invocation_id": "7c5c1e0c-13c8-4316-bfb8-78e46fd0bfa0", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:38.867816Z", "completed_at": "2024-01-16T17:18:38.867820Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:38.868788Z", "completed_at": "2024-01-16T17:18:42.445964Z"}], "thread_id": "Thread-37", "execution_time": 3.5817415714263916, "adapter_response": {"_message": "INSERT 819", "code": "INSERT", "rows_affected": 819}, "message": "INSERT 819", "failures": null, "unique_id": "seed.ga4.ga4_source_categories", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:38.866464Z", "completed_at": "2024-01-16T17:18:38.920573Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:38.921763Z", "completed_at": "2024-01-16T17:18:50.812420Z"}], "thread_id": "Thread-36", "execution_time": 11.94865107536316, "adapter_response": {"_message": "MERGE (12.3m rows, 9.4 GiB processed)", "code": "MERGE", "rows_affected": 12257798, "bytes_processed": 10074461359, "bytes_billed": 10074718208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "8664b8ba-5c16-4a44-8b81-cc09580ab758", "slot_ms": 1384309}, "message": "MERGE (12.3m rows, 9.4 GiB processed)", "failures": null, "unique_id": "model.ga4.base_ga4__events", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\n\nwith source as (\n    select \n        \n    parse_date('%Y%m%d',event_date) as event_date_dt\n    , event_timestamp\n    , event_name\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv\n    , device\n    , geo\n    , app_info\n    , traffic_source\n    , stream_id\n    , platform\n    , ecommerce.total_item_quantity\n    , ecommerce.purchase_revenue_in_usd\n    , ecommerce.purchase_revenue\n    , ecommerce.refund_value_in_usd\n    , ecommerce.refund_value\n    , ecommerce.shipping_value_in_usd\n    , ecommerce.shipping_value\n    , ecommerce.tax_value_in_usd\n    , ecommerce.tax_value\n    , ecommerce.unique_items\n    , ecommerce.transaction_id\n    , items\n\n        from `set-ga-reporting`.`analytics_270752382`.`events_*`\n        where cast( replace(_table_suffix, 'intraday_', '') as int64) >= 20231201\n    \n        and parse_date('%Y%m%d', left( replace(_table_suffix, 'intraday_', ''), 8)) in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n),\nrenamed as (\n    select \n        \n    event_date_dt\n    , event_timestamp\n    , lower(replace(trim(event_name), \" \", \"_\")) as event_name -- Clean up all event names to be snake cased\n    , event_params\n    , event_previous_timestamp\n    , event_value_in_usd\n    , event_bundle_sequence_id\n    , event_server_timestamp_offset\n    , user_id\n    , user_pseudo_id\n    , privacy_info.analytics_storage as privacy_info_analytics_storage\n    , privacy_info.ads_storage as privacy_info_ads_storage\n    , privacy_info.uses_transient_token as privacy_info_uses_transient_token\n    , user_properties\n    , user_first_touch_timestamp\n    , user_ltv.revenue as user_ltv_revenue\n    , user_ltv.currency as user_ltv_currency\n    , device.category as device_category\n    , device.mobile_brand_name as device_mobile_brand_name\n    , device.mobile_model_name as device_mobile_model_name\n    , device.mobile_marketing_name as device_mobile_marketing_name\n    , device.mobile_os_hardware_model as device_mobile_os_hardware_model\n    , device.operating_system as device_operating_system\n    , device.operating_system_version as device_operating_system_version\n    , device.vendor_id as device_vendor_id\n    , device.advertising_id as device_advertising_id\n    , device.language as device_language\n    , device.is_limited_ad_tracking as device_is_limited_ad_tracking\n    , device.time_zone_offset_seconds as device_time_zone_offset_seconds\n    , device.browser as device_browser\n    , device.browser_version as device_browser_version\n    , device.web_info.browser as device_web_info_browser\n    , device.web_info.browser_version as device_web_info_browser_version\n    , device.web_info.hostname as device_web_info_hostname\n    , geo.continent as geo_continent\n    , geo.country as geo_country\n    , geo.region as geo_region\n    , geo.city as geo_city\n    , geo.sub_continent as geo_sub_continent\n    , geo.metro as geo_metro\n    , app_info.id as app_info_id\n    , app_info.version as app_info_version\n    , app_info.install_store as app_info_install_store\n    , app_info.firebase_app_id as app_info_firebase_app_id\n    , app_info.install_source as app_info_install_source\n    , traffic_source.name as user_campaign\n    , traffic_source.medium as user_medium\n    , traffic_source.source as user_source\n    , stream_id\n    , platform\n    , struct(\n        total_item_quantity\n        , purchase_revenue_in_usd\n        , purchase_revenue\n        , refund_value_in_usd\n        , refund_value\n        , shipping_value_in_usd\n        , shipping_value\n        , tax_value_in_usd\n        , tax_value\n        , unique_items\n        , transaction_id        \n    ) as ecommerce\n    , (select \n        array_agg(struct(\n            unnested_items.item_id\n            , unnested_items.item_name\n            , unnested_items.item_brand\n            , unnested_items.item_variant\n            , unnested_items.item_category\n            , unnested_items.item_category2\n            , unnested_items.item_category3\n            , unnested_items.item_category4\n            , unnested_items.item_category5\n            , unnested_items.price_in_usd\n            , unnested_items.price\n            , unnested_items.quantity\n            , unnested_items.item_revenue_in_usd\n            , unnested_items.item_revenue\n            , unnested_items.item_refund_in_usd\n            , unnested_items.item_refund\n            , unnested_items.coupon\n            , unnested_items.affiliation\n            , unnested_items.location_id\n            , unnested_items.item_list_id\n            , unnested_items.item_list_name\n            , unnested_items.item_list_index\n            , unnested_items.promotion_id\n            , unnested_items.promotion_name\n            , unnested_items.creative_name\n            , unnested_items.creative_slot\n            , unnested_items.item_params\n        )) from unnest(items) as unnested_items \n    ) items\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_id') as \n    \n    session_id\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    page_location\n    \n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'ga_session_number') as \n    \n    session_number\n    \n    , COALESCE(\n        (SELECT value.int_value FROM unnest(event_params) WHERE key = \"session_engaged\"),\n        (CASE WHEN (SELECT value.string_value FROM unnest(event_params) WHERE key = \"session_engaged\") = \"1\" THEN 1 END)\n    ) as session_engaged\n    , (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'engagement_time_msec') as \n    \n    engagement_time_msec\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_title') as \n    \n    page_title\n    \n    , (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_referrer') as \n    \n    page_referrer\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'source') as \n    \n    event_source\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'medium') as \n    \n    event_medium\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'campaign') as \n    \n    event_campaign\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'content') as \n    \n    event_content\n    \n    , (select \n        \n            lower(value.string_value)   \n        \n    from unnest(event_params) where key = 'term') as \n    \n    event_term\n    \n    , CASE \n        WHEN event_name = 'page_view' THEN 1\n        ELSE 0\n    END AS is_page_view\n    , CASE \n        WHEN event_name = 'purchase' THEN 1\n        ELSE 0\n    END AS is_purchase\n\n    from source\n)\n\nselect * from renamed\nqualify row_number() over(partition by event_date_dt, stream_id,user_pseudo_id, session_id, event_name, event_timestamp, to_json_string(ARRAY(SELECT params FROM UNNEST(event_params) AS params ORDER BY key))) = 1", "relation_name": "`set-ga-reporting`.`iv_GA4`.`base_ga4__events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:50.819325Z", "completed_at": "2024-01-16T17:18:50.840034Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:50.841521Z", "completed_at": "2024-01-16T17:18:51.469897Z"}], "thread_id": "Thread-39", "execution_time": 0.6528630256652832, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "b48b1dca-5d3c-4500-bf23-781fa1d4537a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__events", "compiled": true, "compiled_code": "-- This staging model contains key creation and window functions. Keeping window functions outside of the base incremental model ensures that the incremental updates don't artificially limit the window partition sizes (ex: if a session spans 2 days, but only 1 day is in the incremental update)\nwith base_events as (\n    select * from `set-ga-reporting`.`iv_GA4`.`base_ga4__events`\n),\n-- Add key that captures a combination of stream_id and user_pseudo_id to uniquely identify a 'client' (aka. a device) within a single stream\ninclude_client_key as (\n    select *\n    , to_base64(md5(concat(user_pseudo_id, stream_id))) as client_key\n    from base_events\n),\n-- Add key for sessions. session_key will be null if client_key is null due to consent being denied. ga_session_id may be null during audience trigger events. \ninclude_session_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(client_key, CAST(session_id as STRING)))) as session_key\n    from include_client_key\n),\n-- Add a key that combines session key and date. Useful when working with session table within date-partitioned tables\ninclude_session_partition_key as (\n    select \n        *,\n        CONCAT(session_key, CAST(event_date_dt as STRING)) as session_partition_key\n    from include_session_key\n),\n-- Add unique key for events\ninclude_event_key as (\n    select \n        *,\n        to_base64(md5(CONCAT(session_key, event_name, CAST(event_timestamp as STRING), to_json_string(event_params)))) as event_key -- Surrogate key for unique events.  \n    from include_session_partition_key\n),\ndetect_gclid as (\n    select\n        * except (event_source, event_medium, event_campaign),\n        case\n            when (page_location like '%gclid%' and event_source is null) then \"google\"\n            else event_source\n        end as event_source,\n        case\n            when (page_location like '%gclid%' and event_medium is null) then \"cpc\"\n            else event_medium\n        end as event_medium,\n        case\n            when (page_location like '%gclid%' and event_campaign is null) then \"(cpc)\"\n            else event_campaign\n        end as event_campaign\n    from include_event_key\n),\n\nremove_query_params as (\n    select \n        * EXCEPT (page_location, page_referrer),\n        page_location as original_page_location,\n        page_referrer as original_page_referrer,\n        \n   REGEXP_EXTRACT(page_location, '(?:\\\\w+:)?\\\\/\\\\/[^\\\\/]+([^?#]+)')\n as page_path,\n        -- If there are query parameters to exclude, exclude them using regex\n        \n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_location, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_location,\n        \nREGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(page_referrer, '(\\\\?|&)(gclid|fbclid|_ga)=[^&]*', '\\\\1'), '\\\\?&+', '?'), '&+', '&'), '\\\\?$|&$', '')\n as page_referrer\n        \n\n        \n        from detect_gclid\n        \n),\nenrich_params as (\n    select \n        *,\n        \n    REGEXP_EXTRACT(page_location, '(?:http[s]?://)?(?:www\\\\.)?(.*?)(?:(?:/|:)(?:.)*|$)')\n as page_hostname,\n        \n    REGEXP_EXTRACT(page_location, '\\\\?(.+)')\n as page_query_string,\n    from remove_query_params\n),\npage_key as (\n    select\n        *,\n        (concat( cast(event_date_dt as string), page_location )) as page_key,\n        case\n            when event_name = 'page_view' then to_base64(md5(concat(session_key, page_referrer)))\n            else to_base64(md5(concat(session_key, page_location)))\n        end as page_engagement_key\n    from enrich_params\n)\nselect * from page_key", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__events`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:51.475108Z", "completed_at": "2024-01-16T17:18:51.492802Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:51.494057Z", "completed_at": "2024-01-16T17:18:55.505719Z"}], "thread_id": "Thread-37", "execution_time": 4.03220796585083, "adapter_response": {"_message": "SELECT (1.0 rows, 23.9 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 25705445893, "bytes_billed": 25705840640, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "4aef2390-b3e0-41dd-a6c3-2af66d24d38a", "slot_ms": 1160125}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__events_event_key.985cc306e5", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select event_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n  where event_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:55.542627Z", "completed_at": "2024-01-16T17:18:55.562888Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:55.567073Z", "completed_at": "2024-01-16T17:18:56.510909Z"}], "thread_id": "Thread-37", "execution_time": 0.9934260845184326, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "9e5c11fc-b74c-4c1b-ad92-61cf27db104a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_first_visit", "compiled": true, "compiled_code": "-- TODO: Unclear why there are first_visit events firing when the ga_session_number is >1. This might cause confusion.\n\nwith first_visit_with_params as (\n select \n    *,\n    (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'page_location') as \n    \n    landing_page\n     \n    \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'first_visit'\n)\n\nselect * from first_visit_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_first_visit`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:55.534021Z", "completed_at": "2024-01-16T17:18:55.564718Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:55.577609Z", "completed_at": "2024-01-16T17:18:56.546491Z"}], "thread_id": "Thread-36", "execution_time": 1.029407024383545, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "36e56f78-a289-4f3a-9bd6-8ab970e717e1", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_file_download", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en&ref_topic=9756175\n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_extension') as \n    \n    file_extension\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_text') as \n    \n    link_text\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'file_download'\n)\n\nselect * from event_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_file_download`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:55.525548Z", "completed_at": "2024-01-16T17:18:55.563950Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:55.571768Z", "completed_at": "2024-01-16T17:18:56.559742Z"}], "thread_id": "Thread-39", "execution_time": 1.0437536239624023, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "3f223f66-a216-445f-ba5d-7b5dd6fec157", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_click", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with click_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'outbound') as \n    \n    outbound\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_classes') as \n    \n    link_classes\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_domain') as \n    \n    link_domain\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_url') as \n    \n    link_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_element') as \n    \n    click_element\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'link_id') as \n    \n    link_id\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_region') as \n    \n    click_region\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_tag_name') as \n    \n    click_tag_name\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'click_url') as \n    \n    click_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'file_name') as \n    \n    file_name\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n where event_name = 'click'\n)\n\nselect * from click_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_click`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:56.515610Z", "completed_at": "2024-01-16T17:18:56.535018Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:56.536493Z", "completed_at": "2024-01-16T17:18:57.419886Z"}], "thread_id": "Thread-37", "execution_time": 0.9057199954986572, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "2a0bf9ac-f8c3-4f04-920c-d864ab531a7c", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_items", "compiled": true, "compiled_code": "with items_with_params as (\n    select\n        event_key,\n        event_name,\n        event_date_dt,\n        stream_id,\n        i.item_id,\n        i.item_name,\n        i.item_brand,\n        i.item_variant,\n        i.item_category,\n        i.item_category2,\n        i.item_category3,\n        i.item_category4,\n        i.item_category5,\n        i.price_in_usd,\n        i.price,\n        i.quantity,\n        i.item_revenue_in_usd,\n        i.item_revenue,\n        i.item_refund_in_usd,\n        i.item_refund,\n        i.coupon,\n        i.affiliation,\n        i.location_id,\n        i.item_list_id,\n        i.item_list_name,\n        i.item_list_index,\n        i.promotion_id,\n        i.promotion_name,\n        i.creative_name,\n        i.creative_slot\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`,\n        unnest(items) as i\n    where event_name in ('add_payment_info', 'add_shipping_info', 'add_to_cart','add_to_wishlist','begin_checkout' ,'purchase','refund', 'remove_from_cart','select_item', 'select_promotion','view_item_list','view_promotion', 'view_item')\n)\n\nselect * from items_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_items`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:56.564649Z", "completed_at": "2024-01-16T17:18:56.585152Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:56.586251Z", "completed_at": "2024-01-16T17:18:57.499482Z"}], "thread_id": "Thread-39", "execution_time": 0.9368433952331543, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "64297b9a-3811-4b9a-9647-99ce02fe72c7", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_scroll", "compiled": true, "compiled_code": "with scroll_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'percent_scrolled') as \n    \n    percent_scrolled\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'scroll'\n)\n\nselect * from scroll_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_scroll`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:56.551000Z", "completed_at": "2024-01-16T17:18:56.575222Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:56.576237Z", "completed_at": "2024-01-16T17:18:57.532715Z"}], "thread_id": "Thread-36", "execution_time": 0.9830694198608398, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "fdc687bb-297d-469e-bcdb-6ce864015213", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_page_view", "compiled": true, "compiled_code": "with page_view_with_params as (\n   select * except(page_engagement_key),\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    ,\n      case when split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(4)],'?')[safe_ordinal(1)]) end as pagepath_level_1,\n      case when split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(5)],'?')[safe_ordinal(1)]) end as pagepath_level_2,\n      case when split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(6)],'?')[safe_ordinal(1)]) end as pagepath_level_3,\n      case when split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)] = '' then null else concat('/',split(split(page_location,'/')[safe_ordinal(7)],'?')[safe_ordinal(1)]) end as pagepath_level_4,\n      to_base64(md5(concat(session_key, page_location))) as page_engagement_key\n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'page_view'\n)\nselect *\nfrom page_view_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:57.424687Z", "completed_at": "2024-01-16T17:18:57.451998Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:57.453295Z", "completed_at": "2024-01-16T17:18:58.099105Z"}], "thread_id": "Thread-37", "execution_time": 0.6759822368621826, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "f682fdb5-8de7-44a7-9c1a-3567caa2ce1b", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_session_start", "compiled": true, "compiled_code": "with session_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.float_value    \n        \n    from unnest(event_params) where key = 'value') as \n    \n    value\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'session_start'\n)\n\nselect * from session_start_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_session_start`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:57.537336Z", "completed_at": "2024-01-16T17:18:57.560488Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:57.561793Z", "completed_at": "2024-01-16T17:18:58.373924Z"}], "thread_id": "Thread-36", "execution_time": 0.838118314743042, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "31ea4ce2-c1a1-420c-b806-d52095518f68", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_user_engagement", "compiled": true, "compiled_code": "-- Event defined as \"when the app is in the foreground or webpage is in focus for at least one second.\"\n \n with user_engagement_with_params as (\n   select *\n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'user_engagement'\n)\n\nselect * from user_engagement_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_user_engagement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:57.504213Z", "completed_at": "2024-01-16T17:18:57.521269Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:57.522499Z", "completed_at": "2024-01-16T17:18:58.389532Z"}], "thread_id": "Thread-39", "execution_time": 0.8866977691650391, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "d6ac9525-2f50-4047-a724-c8b3253c48b4", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_to_query_string_params", "compiled": true, "compiled_code": "with event_and_query_string as \n(\n    select \n        event_key,\n        split(page_query_string, '&') as qs_split\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n),\nflattened_qs as\n(\n    select \n        event_key, \n        params \n    from event_and_query_string, unnest(qs_split) as params\n),\nsplit_param_value as \n(\n    select \n        event_key, \n        split(params,'=')[SAFE_OFFSET(0)] as param, \n        NULLIF(split(params,'=')[SAFE_OFFSET(1)], '') as value \n    from flattened_qs\n)\n\nselect * from split_param_value", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_to_query_string_params`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:58.107080Z", "completed_at": "2024-01-16T17:18:58.130343Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:58.131634Z", "completed_at": "2024-01-16T17:18:58.782826Z"}], "thread_id": "Thread-37", "execution_time": 0.6772780418395996, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "c1ffec05-5ce2-46b7-bd36-e16af0cd7cdf", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_video_complete", "compiled": true, "compiled_code": "-- Defined as when the video ends. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_complete_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'video_complete'\n)\n\nselect * from video_complete_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_video_complete`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:58.378668Z", "completed_at": "2024-01-16T17:18:58.407240Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:58.408390Z", "completed_at": "2024-01-16T17:18:59.068945Z"}], "thread_id": "Thread-36", "execution_time": 0.6917538642883301, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "24cc5c91-a5ba-44ab-a7f4-52904c65b772", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_video_start", "compiled": true, "compiled_code": "-- Defined as when the video starts playing. For embedded YouTube videos that have JS API support enabled. Collected by default via enhanced measurement.\n-- More info: https://support.google.com/firebase/answer/9234069?hl=en\n \n with video_start_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_current_time') as \n    \n    video_current_time\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_duration') as \n    \n    video_duration\n    ,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'video_percent') as \n    \n    video_percent\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_url') as \n    \n    video_url\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'video_provider') as \n    \n    video_provider\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'vide_title') as \n    \n    vide_title\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'visible') as \n    \n    visible\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`    \n where event_name = 'video_start'\n)\n\nselect * from video_start_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_video_start`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:58.394148Z", "completed_at": "2024-01-16T17:18:58.420757Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:58.421810Z", "completed_at": "2024-01-16T17:18:59.353780Z"}], "thread_id": "Thread-39", "execution_time": 0.9611968994140625, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "d3306081-100d-42b1-a88e-a6e5d78868b1", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__event_view_search_results", "compiled": true, "compiled_code": "-- reference here: https://support.google.com/analytics/answer/9216061?hl=en \n \n with event_with_params as (\n   select *,\n      (select \n        \n            value.int_value    \n        \n    from unnest(event_params) where key = 'entrances') as \n    \n    entrances\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'search_term') as \n    \n    search_term\n    ,\n      (select \n        \n            value.string_value    \n        \n    from unnest(event_params) where key = 'unique_search_term') as \n    \n    unique_search_term\n    \n      \n      \n from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n where event_name = 'view_search_results'\n)\n\nselect * from event_with_params", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__event_view_search_results`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:58.787485Z", "completed_at": "2024-01-16T17:18:58.806079Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:58.807270Z", "completed_at": "2024-01-16T17:18:59.431704Z"}], "thread_id": "Thread-37", "execution_time": 0.6457319259643555, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "b25413e3-44e3-4d52-8135-de920db35942", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__page_conversions", "compiled": true, "compiled_code": "\n\nselect \n    page_key\n    \n    , countif(event_name = 'view_item') as view_item_count\n    \n    , countif(event_name = 'add_to_cart') as add_to_cart_count\n    \n    , countif(event_name = 'begin_checkout') as begin_checkout_count\n    \n    , countif(event_name = 'complete_registration') as complete_registration_count\n    \n    , countif(event_name = 'add_payment_info') as add_payment_info_count\n    \n    , countif(event_name = 'subscribe') as subscribe_count\n    \n    , countif(event_name = 'purchase') as purchase_count\n    \nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\ngroup by 1", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__page_conversions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:59.073481Z", "completed_at": "2024-01-16T17:18:59.090190Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:59.091370Z", "completed_at": "2024-01-16T17:18:59.729003Z"}], "thread_id": "Thread-36", "execution_time": 0.6570186614990234, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "fc0539d7-df7b-43f7-ab9a-082aee24892a", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__page_engaged_time", "compiled": true, "compiled_code": "with pek_time as (\nselect\n    page_engagement_key,\n    sum(engagement_time_msec) as page_engagement_time,\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\ngroup by 1\n),\nmatched_pv as ( -- need to replace the pek with one that uses page_location to match back to correct page_view\n    select\n        to_base64(md5(concat(session_key, page_location))) as page_engagement_key, \n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where event_name = 'page_view'\n),\ndenominator as ( \n    select\n        page_engagement_key,\n        count(page_engagement_key) as page_engagement_denominator, --for sessions with multiple hits to the same page\n    from matched_pv\n    group by 1\n)\nselect\n    denominator.page_engagement_key,\n    case\n        when pek_time.page_engagement_time is null then null -- safe_divide in the numerator would return 0; we need null to prevent page views with no recorded engagement time from factoring in to later calculations\n        else safe_divide(pek_time.page_engagement_time , denominator.page_engagement_denominator) \n    end as page_engagement_time_msec, --technically the average engagement time for that page in that session\n    case \n        when pek_time.page_engagement_time is null then null -- remove page_views with no engagement time from the denominator\n        else denominator.page_engagement_denominator \n    end as page_engagement_denominator\nfrom denominator \nleft join pek_time using(page_engagement_key)", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__page_engaged_time`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:59.436667Z", "completed_at": "2024-01-16T17:18:59.453855Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:59.455065Z", "completed_at": "2024-01-16T17:19:00.078074Z"}], "thread_id": "Thread-37", "execution_time": 0.6431269645690918, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "ae5c40ba-e22c-4245-939c-62c81148b086", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_first_last_pageviews", "compiled": true, "compiled_code": "with page_views_first_last as (\n    select\n        session_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY session_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where event_name = 'page_view'\n),\npage_views_by_session_key as (\n    select distinct\n        session_key,\n        first_page_view_event_key,\n        last_page_view_event_key\n    from page_views_first_last\n)\n\nselect * from page_views_by_session_key", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_first_last_pageviews`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:59.733612Z", "completed_at": "2024-01-16T17:18:59.775338Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:59.776561Z", "completed_at": "2024-01-16T17:19:00.487076Z"}], "thread_id": "Thread-36", "execution_time": 0.7548701763153076, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "343edd77-0ecb-461e-b7dc-22f8ea2ea8c5", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources", "compiled": true, "compiled_code": "with session_events as (\n    select\n        session_key\n        ,event_timestamp\n        ,events.event_source\n        ,event_medium\n        ,event_campaign\n        ,event_content\n        ,event_term\n        ,source_category\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events` events\n    left join `set-ga-reporting`.`iv_GA4`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    where session_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nsession_source as (\n    select\n        session_key\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\nselect distinct * from session_source", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:00.491956Z", "completed_at": "2024-01-16T17:19:00.511975Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:00.513188Z", "completed_at": "2024-01-16T17:19:01.154143Z"}], "thread_id": "Thread-36", "execution_time": 0.6637365818023682, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "c32d274b-2154-4849-8dd4-bb28ddbbbdf1", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__user_id_mapping", "compiled": true, "compiled_code": "with events_with_user_id as (\n    select \n        user_id,\n        client_key,\n        event_timestamp \n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where user_id is not null\n        and client_key is not null\n),\ninclude_last_seen_timestamp as (\n    select \n        user_id,\n        client_key,\n        max(event_timestamp) as last_seen_user_id_timestamp\n    from events_with_user_id\n    group by 1,2\n),\npick_latest_timestamp as (\n    select\n        user_id as last_seen_user_id,\n        client_key,\n        last_seen_user_id_timestamp\n    from include_last_seen_timestamp\n    -- Find the latest mapping between client_key and user_id\n    qualify row_number() over(partition by client_key order by last_seen_user_id_timestamp desc) = 1\n\n)\n\nselect * from pick_latest_timestamp", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__user_id_mapping`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:01.158771Z", "completed_at": "2024-01-16T17:19:01.177784Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:01.179101Z", "completed_at": "2024-01-16T17:19:03.008461Z"}], "thread_id": "Thread-36", "execution_time": 1.8513801097869873, "adapter_response": {"_message": "SELECT (1.0 rows, 2.0 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 2125651279, "bytes_billed": 2126512128, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "1af0d3b3-ff8b-4df6-a608-9921d98e9ebc", "slot_ms": 35423}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__event_page_view_page_location.8b37318084", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect page_location\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view`\nwhere page_location is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:59.358371Z", "completed_at": "2024-01-16T17:18:59.379070Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:59.380179Z", "completed_at": "2024-01-16T17:19:03.071396Z"}], "thread_id": "Thread-39", "execution_time": 3.714479446411133, "adapter_response": {"_message": "MERGE (539.5k rows, 441.0 MiB processed)", "code": "MERGE", "rows_affected": 539498, "bytes_processed": 462417272, "bytes_billed": 462422016, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "1fdbb74e-04f5-48ad-83e5-59787afb333e", "slot_ms": 25333}, "message": "MERGE (539.5k rows, 441.0 MiB processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__session_conversions_daily", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\n\n\nwith event_counts as (\n    select \n        session_key,\n        session_partition_key,\n        min(event_date_dt) as session_partition_date -- The date of this session partition\n        \n        , countif(event_name = 'view_item') as view_item_count\n        \n        , countif(event_name = 'add_to_cart') as add_to_cart_count\n        \n        , countif(event_name = 'begin_checkout') as begin_checkout_count\n        \n        , countif(event_name = 'complete_registration') as complete_registration_count\n        \n        , countif(event_name = 'add_payment_info') as add_payment_info_count\n        \n        , countif(event_name = 'subscribe') as subscribe_count\n        \n        , countif(event_name = 'purchase') as purchase_count\n        \n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where 1=1\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n    group by 1,2\n)\n\nselect * from event_counts", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__session_conversions_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:00.082749Z", "completed_at": "2024-01-16T17:19:00.140560Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:00.141884Z", "completed_at": "2024-01-16T17:19:04.471384Z"}], "thread_id": "Thread-37", "execution_time": 4.390155076980591, "adapter_response": {"_message": "MERGE (539.7k rows, 647.6 MiB processed)", "code": "MERGE", "rows_affected": 539740, "bytes_processed": 679099557, "bytes_billed": 679477248, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "22775575-39e5-41f0-9ef2-c63ab6de2af9", "slot_ms": 51533}, "message": "MERGE (539.7k rows, 647.6 MiB processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_daily", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\n\nwith session_events as (\n    select\n        client_key\n        ,session_partition_key\n        ,event_date_dt as session_partition_date\n        ,event_timestamp\n        ,events.event_source\n        ,event_medium\n        ,event_campaign\n        ,event_content\n        ,event_term\n        ,source_category\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events` events\n    left join `set-ga-reporting`.`iv_GA4`.`ga4_source_categories` source_categories on events.event_source = source_categories.source\n    where session_partition_key is not null\n    and event_name != 'session_start'\n    and event_name != 'first_visit'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n\n   ),\nset_default_channel_grouping as (\n    select\n        *\n        ,\ncase\n  -- Direct: Source exactly matches \"(direct)\" AND Medium is one of (\"(not set)\", \"(none)\")\n  when (\n      event_source is null\n        and event_medium is null\n    )\n    or (\n      event_source = '(direct)'\n      and (event_medium = '(none)' or event_medium = '(not set)')\n    )\n    then 'Direct'\n\n  -- Cross-network: Campaign Name contains \"cross-network\"\n  when REGEXP_CONTAINS(event_campaign, r\"cross-network\")\n    then 'Cross-network'\n\n  -- Paid Shopping:\n  --   (Source matches a list of shopping sites\n  --   OR\n  --   Campaign Name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$)\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when (\n      source_category = 'SOURCE_CATEGORY_SHOPPING'\n      or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    )\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Shopping'\n\n  -- Paid Search:\n  --   Source matches a list of search sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SEARCH'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Search'\n\n  -- Paid Social:\n  --   Source matches a regex list of social sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    and REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Social'\n\n  -- Paid Video:\n  --   Source matches a list of video sites\n  --   AND\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    and REGEXP_CONTAINS(event_medium,r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Video'\n\n  -- Display:\n  --   Medium is one of (\"display\", \"banner\", \"expandable\", \"interstitial\", \"cpm\")\n  when event_medium in ('display', 'banner', 'expandable', 'interstitial', 'cpm')\n    then 'Display'\n\n  -- Paid Other:\n  --   Medium matches regex ^(.*cp.*|ppc|retargeting|paid.*)$\n  when REGEXP_CONTAINS(event_medium, r\"^(.*cp.*|ppc|retargeting|paid.*)$\")\n    then 'Paid Other'\n\n  -- Organic Shopping:\n  --   Source matches a list of shopping sites\n  --   OR\n  --   Campaign name matches regex ^(.*(([^a-df-z]|^)shop|shopping).*)$\n  when source_category = 'SOURCE_CATEGORY_SHOPPING'\n    or REGEXP_CONTAINS(event_campaign, r\"^(.*(([^a-df-z]|^)shop|shopping).*)$\")\n    then 'Organic Shopping'\n\n  -- Organic Social:\n  --   Source matches a regex list of social sites\n  --   OR\n  --   Medium is one of (\"social\", \"social-network\", \"social-media\", \"sm\", \"social network\", \"social media\")\n  when source_category = 'SOURCE_CATEGORY_SOCIAL'\n    or event_medium in (\"social\",\"social-network\",\"social-media\",\"sm\",\"social network\",\"social media\")\n    then 'Organic Social'\n\n  -- Organic Video:\n  --   Source matches a list of video sites\n  --   OR\n  --   Medium matches regex ^(.*video.*)$\n  when source_category = 'SOURCE_CATEGORY_VIDEO'\n    or REGEXP_CONTAINS(event_medium, r\"^(.*video.*)$\")\n    then 'Organic Video'\n\n  -- Organic Search:\n  --   Source matches a list of search sites\n  --   OR\n  --   Medium exactly matches organic\n  when source_category = 'SOURCE_CATEGORY_SEARCH' or event_medium = 'organic'\n    then 'Organic Search'\n\n  -- Referral:\n  --   Medium is one of (\"referral\", \"app\", or \"link\")\n  when event_medium in (\"referral\", \"app\", \"link\")\n    then 'Referral'\n\n  -- Email:\n  --   Source = email|e-mail|e_mail|e mail\n  --   OR\n  --   Medium = email|e-mail|e_mail|e mail\n  when REGEXP_CONTAINS(event_source, r\"email|e-mail|e_mail|e mail\")\n    or REGEXP_CONTAINS(event_medium, r\"email|e-mail|e_mail|e mail\")\n    then 'Email'\n\n  -- Affiliates:\n  --   Medium = affiliate\n  when event_medium = 'affiliate'\n    then 'Affiliates'\n\n  -- Audio:\n  --   Medium exactly matches audio\n  when event_medium = 'audio'\n    then 'Audio'\n\n  -- SMS:\n  --   Source exactly matches sms\n  --   OR\n  --   Medium exactly matches sms\n  when event_source = 'sms'\n    or event_medium = 'sms'\n    then 'SMS'\n\n  -- Mobile Push Notifications:\n  --   Medium ends with \"push\"\n  --   OR\n  --   Medium contains \"mobile\" or \"notification\"\n  --   OR\n  --   Source exactly matches \"firebase\"\n  when REGEXP_CONTAINS(event_medium, r\"push$\")\n    or REGEXP_CONTAINS(event_medium, r\"mobile|notification\")\n    or event_source = 'firebase'\n    then 'Mobile Push Notifications'\n\n  -- Unassigned is the value Analytics uses when there are no other channel rules that match the event data.\n  else 'Unassigned'\nend\n\n as default_channel_grouping\n    from session_events\n),\nfirst_session_source as (\n    select\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,event_timestamp\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN event_source END) IGNORE NULLS) OVER (session_window), '(direct)') AS session_source\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_medium, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_medium\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(source_category, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_source_category\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_campaign, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_campaign\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_content, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_content\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(event_term, '(none)') END) IGNORE NULLS) OVER (session_window), '(none)') AS session_term\n        ,COALESCE(FIRST_VALUE((CASE WHEN event_source <> '(direct)' THEN COALESCE(default_channel_grouping, 'Direct') END) IGNORE NULLS) OVER (session_window), 'Direct') AS session_default_channel_grouping\n    from set_default_channel_grouping\n    WINDOW session_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n),\nfind_non_direct_session_partition_key as (\n\n    select\n        *\n        ,if(session_source <> '(direct)', session_partition_key, null) as non_direct_session_partition_key --provide the session_partition_key only if source is not direct. Useful for last non-direct attribution modeling\n    from first_session_source\n)\n\nselect\n        client_key\n        ,session_partition_key\n        ,session_partition_date\n        ,session_source\n        ,session_medium\n        ,session_source_category\n        ,session_campaign\n        ,session_content\n        ,session_term\n        ,session_default_channel_grouping\n        ,non_direct_session_partition_key\n        ,min(event_timestamp) as session_partition_timestamp\nfrom find_non_direct_session_partition_key\ngroup by 1,2,3,4,5,6,7,8,9,10,11", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_daily`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:04.476238Z", "completed_at": "2024-01-16T17:19:04.498598Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:04.499855Z", "completed_at": "2024-01-16T17:19:06.316316Z"}], "thread_id": "Thread-37", "execution_time": 1.8417267799377441, "adapter_response": {"_message": "SELECT (1.0 rows, 3.6 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 3898468317, "bytes_billed": 3898605568, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "fbea3755-e272-47c2-9c7b-5c13d1bc6f37", "slot_ms": 73062}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__user_id_mapping_client_key.7c63d41e4c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect client_key\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__user_id_mapping`\nwhere client_key is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:03.012917Z", "completed_at": "2024-01-16T17:19:03.030447Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:03.031716Z", "completed_at": "2024-01-16T17:19:06.471202Z"}], "thread_id": "Thread-36", "execution_time": 3.4599127769470215, "adapter_response": {"_message": "SELECT (1.0 rows, 6.5 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 6985691519, "bytes_billed": 6986661888, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "007529f9-ca01-4097-b13a-bb61852ea976", "slot_ms": 360391}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_session_source.49313fe211", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:06.320451Z", "completed_at": "2024-01-16T17:19:06.342500Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:06.344220Z", "completed_at": "2024-01-16T17:19:08.096700Z"}], "thread_id": "Thread-37", "execution_time": 1.7778840065002441, "adapter_response": {"_message": "SELECT (1.0 rows, 3.6 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 3898468317, "bytes_billed": 3898605568, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "8dcb5f60-337f-4dfd-b1e3-6fb87e3ef0c8", "slot_ms": 101745}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__user_id_mapping_client_key.cae6196948", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__user_id_mapping`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:03.076086Z", "completed_at": "2024-01-16T17:19:03.093660Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:03.095519Z", "completed_at": "2024-01-16T17:19:08.297556Z"}], "thread_id": "Thread-39", "execution_time": 5.22315239906311, "adapter_response": {"_message": "SELECT (1.0 rows, 6.5 GiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 6985691519, "bytes_billed": 6986661888, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "35a465a0-d276-4199-be20-9f9f2858f9b5", "slot_ms": 414990}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_session_key.417549e35d", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:08.301827Z", "completed_at": "2024-01-16T17:19:08.322586Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:08.323951Z", "completed_at": "2024-01-16T17:19:10.152562Z"}], "thread_id": "Thread-39", "execution_time": 1.8524038791656494, "adapter_response": {"_message": "SELECT (1.0 rows, 107.3 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 112475160, "bytes_billed": 113246208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "18f19f2f-3a2a-4a59-abbc-a925ecbf3f94", "slot_ms": 8255}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__session_conversions_daily_session_partition_key.03be265557", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__session_conversions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:10.156907Z", "completed_at": "2024-01-16T17:19:10.175296Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:10.176497Z", "completed_at": "2024-01-16T17:19:11.084648Z"}], "thread_id": "Thread-39", "execution_time": 0.9293735027313232, "adapter_response": {"_message": "SELECT (1.0 rows, 28.8 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 30236937, "bytes_billed": 30408704, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "e96192f2-6ea6-4403-a4e2-c2995064708f", "slot_ms": 68}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_daily_session_source.5204b8a71d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_daily`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:11.088825Z", "completed_at": "2024-01-16T17:19:11.106454Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:11.107502Z", "completed_at": "2024-01-16T17:19:13.049862Z"}], "thread_id": "Thread-39", "execution_time": 1.96282958984375, "adapter_response": {"_message": "SELECT (1.0 rows, 107.2 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 112380660, "bytes_billed": 113246208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "ae15e0e5-1a00-431e-b3c2-60b5d925e6db", "slot_ms": 7192}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_daily_session_partition_key.0a63631827", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:06.475436Z", "completed_at": "2024-01-16T17:19:06.497014Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:06.498107Z", "completed_at": "2024-01-16T17:19:13.093520Z"}], "thread_id": "Thread-36", "execution_time": 6.619639158248901, "adapter_response": {"_message": "MERGE (379.5k rows, 11.9 GiB processed)", "code": "MERGE", "rows_affected": 379455, "bytes_processed": 12728067949, "bytes_billed": 12728664064, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "f0e3f331-a8a3-48d4-8eff-21336ff38f12", "slot_ms": 509895}, "message": "MERGE (379.5k rows, 11.9 GiB processed)", "failures": null, "unique_id": "model.ga4.fct_ga4__pages", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\nwith page_view as (\n    select\n        event_date_dt,\n        stream_id,\n        page_location,  -- includes query string parameters not listed in query_parameter_exclusions variable\n        page_key,\n        page_path,\n        page_title,  -- would like to move this to dim_ga4__pages but need to think how to handle page_title changing over time\n        page_engagement_key,\n        count(event_name) as page_views,\n        count(distinct client_key ) as distinct_client_keys,\n        sum( if(session_number = 1,1,0)) as new_client_keys,\n        sum(entrances) as entrances,\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view`\n\n        where event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n\n    group by 1,2,3,4,5,6,7\n), page_engagement as (\n    select\n        page_view.* except(page_engagement_key),\n        sum(page_engagement_time_msec) as total_engagement_time_msec,\n        sum( page_engagement_denominator) as avg_engagement_time_denominator\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__page_engaged_time`\n    right join page_view using (page_engagement_key)\n    group by 1,2,3,4,5,6,7,8,9,10\n), scroll as (\n    select\n        event_date_dt,\n        page_location, \n        page_title,\n        count(event_name) as scroll_events\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_scroll`\n    \n            where event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n    group by 1,2,3\n)\n\n,\njoin_conversions as (\n    select \n        *\n    from page_engagement\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__page_conversions` using (page_key)\n)\nselect\n    join_conversions.*  except (page_key),\n    ifnull(scroll.scroll_events, 0) as scroll_events\nfrom join_conversions\nleft join scroll using (event_date_dt, page_location, page_title)\n", "relation_name": "`set-ga-reporting`.`iv_GA4`.`fct_ga4__pages`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:18:55.519387Z", "completed_at": "2024-01-16T17:18:55.570902Z"}, {"name": "execute", "started_at": "2024-01-16T17:18:55.581622Z", "completed_at": "2024-01-16T17:19:13.289702Z"}], "thread_id": "Thread-38", "execution_time": 17.77595090866089, "adapter_response": {"_message": "CREATE TABLE (752.4k rows, 37.8 GiB processed)", "code": "CREATE TABLE", "rows_affected": 752392, "bytes_processed": 40614936905, "bytes_billed": 40615542784, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "b84540bf-48bb-4379-a7c1-9995da038a67", "slot_ms": 4089181}, "message": "CREATE TABLE (752.4k rows, 37.8 GiB processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__client_key_first_last_events", "compiled": true, "compiled_code": "\n\nwith first_last_event as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_event,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_event,\n        stream_id\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where client_key is not null --remove users with privacy settings enabled\n),\nevents_by_client_key as (\n    select distinct\n        client_key,\n        first_event,\n        last_event,\n        stream_id\n    from first_last_event\n),\nevents_joined as (\n    select\n        events_by_client_key.*,\n        events_first.geo_continent as first_geo_continent,\n        events_first.geo_country as first_geo_country,\n        events_first.geo_region as first_geo_region,\n        events_first.geo_city as first_geo_city,\n        events_first.geo_sub_continent as first_geo_sub_continent,\n        events_first.geo_metro as first_geo_metro,\n        events_first.device_category as first_device_category,\n        events_first.device_mobile_brand_name as first_device_mobile_brand_name,\n        events_first.device_mobile_model_name as first_device_mobile_model_name,\n        events_first.device_mobile_marketing_name as first_device_mobile_marketing_name,\n        events_first.device_mobile_os_hardware_model as first_device_mobile_os_hardware_model,\n        events_first.device_operating_system as first_device_operating_system,\n        events_first.device_operating_system_version as first_device_operating_system_version,\n        events_first.device_vendor_id as first_device_vendor_id,\n        events_first.device_advertising_id as first_device_advertising_id,\n        events_first.device_language as first_device_language,\n        events_first.device_is_limited_ad_tracking as first_device_is_limited_ad_tracking,\n        events_first.device_time_zone_offset_seconds as first_device_time_zone_offset_seconds,\n        events_first.device_browser as first_device_browser,\n        events_first.device_browser_version as first_device_browser_version,\n        events_first.device_web_info_browser as first_device_web_info_browser,\n        events_first.device_web_info_browser_version as first_device_web_info_browser_version,\n        events_first.device_web_info_hostname as first_device_web_info_hostname,\n        events_first.user_campaign as first_user_campaign,\n        events_first.user_medium as first_user_medium,\n        events_first.user_source as first_user_source,\n        events_last.geo_continent as last_geo_continent,\n        events_last.geo_country as last_geo_country,\n        events_last.geo_region as last_geo_region,\n        events_last.geo_city as last_geo_city,\n        events_last.geo_sub_continent as last_geo_sub_continent,\n        events_last.geo_metro as last_geo_metro,\n        events_last.device_category as last_device_category,\n        events_last.device_mobile_brand_name as last_device_mobile_brand_name,\n        events_last.device_mobile_model_name as last_device_mobile_model_name,\n        events_last.device_mobile_marketing_name as last_device_mobile_marketing_name,\n        events_last.device_mobile_os_hardware_model as last_device_mobile_os_hardware_model,\n        events_last.device_operating_system as last_device_operating_system,\n        events_last.device_operating_system_version as last_device_operating_system_version,\n        events_last.device_vendor_id as last_device_vendor_id,\n        events_last.device_advertising_id as last_device_advertising_id,\n        events_last.device_language as last_device_language,\n        events_last.device_is_limited_ad_tracking as last_device_is_limited_ad_tracking,\n        events_last.device_time_zone_offset_seconds as last_device_time_zone_offset_seconds,\n        events_last.device_browser as last_device_browser,\n        events_last.device_browser_version as last_device_browser_version,\n        events_last.device_web_info_browser as last_device_web_info_browser,\n        events_last.device_web_info_browser_version as last_device_web_info_browser_version,\n        events_last.device_web_info_hostname as last_device_web_info_hostname,\n        events_last.user_campaign as last_user_campaign,\n        events_last.user_medium as last_user_medium,\n        events_last.user_source as last_user_source,\n    from events_by_client_key\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__events` events_first\n        on events_by_client_key.first_event = events_first.event_key\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__events` events_last\n        on events_by_client_key.last_event = events_last.event_key\n)\n\nselect * from events_joined", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_events`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:13.294670Z", "completed_at": "2024-01-16T17:19:13.317699Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:13.319090Z", "completed_at": "2024-01-16T17:19:17.627032Z"}], "thread_id": "Thread-38", "execution_time": 4.3338494300842285, "adapter_response": {"_message": "MERGE (539.7k rows, 502.4 MiB processed)", "code": "MERGE", "rows_affected": 539740, "bytes_processed": 526813665, "bytes_billed": 527433728, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "ee908d27-a7b1-4ac9-b952-b150c92808fc", "slot_ms": 22714}, "message": "MERGE (539.7k rows, 502.4 MiB processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__sessions_traffic_sources_last_non_direct_daily", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\nwith last_non_direct_session_partition_key as (\n  select\n    client_key\n    ,session_partition_key\n    ,session_partition_date\n    ,session_source\n    ,session_medium\n    ,session_source_category\n    ,session_campaign\n    ,session_content\n    ,session_term\n    ,session_default_channel_grouping\n    ,non_direct_session_partition_key\n    ,CASE\n      WHEN non_direct_session_partition_key is null\n      THEN \n          last_value(non_direct_session_partition_key ignore nulls) over(\n          partition by client_key\n          order by\n              session_partition_timestamp range between 2592000000000 preceding\n              and current row -- lookback window \n          )\n      ELSE non_direct_session_partition_key\n    END as session_partition_key_last_non_direct,\n  from\n  `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_daily`\n  \n      -- Add 30 to static_incremental_days to include the session attribution lookback window\n      where session_partition_date >= date_sub(current_date, interval (33 ) day)\n  \n)\n,join_last_non_direct_session_source as (\n  select\n    last_non_direct_session_partition_key.client_key\n    ,last_non_direct_session_partition_key.session_partition_key\n    ,last_non_direct_session_partition_key.session_partition_date\n    ,last_non_direct_session_partition_key.session_source\n    ,last_non_direct_session_partition_key.session_medium\n    ,last_non_direct_session_partition_key.session_source_category\n    ,last_non_direct_session_partition_key.session_campaign\n    ,last_non_direct_session_partition_key.session_content\n    ,last_non_direct_session_partition_key.session_term\n    ,last_non_direct_session_partition_key.session_default_channel_grouping\n    ,last_non_direct_session_partition_key.session_partition_key_last_non_direct\n    ,coalesce(last_non_direct_source.session_source, '(direct)') as last_non_direct_source -- Value will be null if only direct sessions are within the lookback window\n    ,coalesce(last_non_direct_source.session_medium, '(none)') as last_non_direct_medium\n    ,coalesce(last_non_direct_source.session_source_category, '(none)') as last_non_direct_source_category\n    ,coalesce(last_non_direct_source.session_campaign, '(none)') as last_non_direct_campaign\n    ,coalesce(last_non_direct_source.session_content, '(none)') as last_non_direct_content\n    ,coalesce(last_non_direct_source.session_term, '(none)') as last_non_direct_term\n    ,coalesce(last_non_direct_source.session_default_channel_grouping, '(none)') as last_non_direct_default_channel_grouping\n  from last_non_direct_session_partition_key\n  left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_daily` last_non_direct_source on\n    last_non_direct_session_partition_key.session_partition_key_last_non_direct = last_non_direct_source.session_partition_key\n  \n      -- Only keep the records in the partitions we wish to replace (as opposed to the whole 30 day lookback window)\n      where last_non_direct_session_partition_key.session_partition_date in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n  \n)\n\nselect * from join_last_non_direct_session_source", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:13.098936Z", "completed_at": "2024-01-16T17:19:13.120116Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:13.121366Z", "completed_at": "2024-01-16T17:19:17.993147Z"}], "thread_id": "Thread-36", "execution_time": 4.895901441574097, "adapter_response": {"_message": "MERGE (540.3k rows, 627.4 MiB processed)", "code": "MERGE", "rows_affected": 540314, "bytes_processed": 657893722, "bytes_billed": 658505728, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "58d5bb33-8c34-4bfd-82ef-9752f63a563e", "slot_ms": 38228}, "message": "MERGE (540.3k rows, 627.4 MiB processed)", "failures": null, "unique_id": "model.ga4.fct_ga4__sessions_daily", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\n\nwith session_metrics as (\n    select \n        session_key,\n        session_partition_key,\n        client_key,\n        stream_id,\n        max(user_id) as user_id, -- user_id can be null at the start and end of a session and still be set in the middle\n        min(event_date_dt) as session_partition_date, -- Date of the session partition, does not represent the true session start date which, in GA4, can span multiple days\n        min(event_timestamp) as session_partition_min_timestamp,\n        countif(event_name = 'page_view') as session_partition_count_page_views,\n        sum(event_value_in_usd) as session_partition_sum_event_value_in_usd,\n        ifnull(max(session_engaged), 0) as session_partition_max_session_engaged,\n        sum(engagement_time_msec) as session_partition_sum_engagement_time_msec,\n        min(session_number) as session_number\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where session_key is not null\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n    group by 1,2,3,4\n)\n\n    ,\n    session_conversions as (\n    select * from `set-ga-reporting`.`iv_GA4`.`stg_ga4__session_conversions_daily`\n    where 1=1\n    \n            and session_partition_date in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n    ),\n    join_metrics_and_conversions as (\n        select \n            session_metrics.client_key,\n            session_metrics.stream_id,\n            session_metrics.user_id,\n            session_metrics.session_partition_min_timestamp,\n            session_metrics.session_partition_count_page_views,\n            session_metrics.session_partition_sum_event_value_in_usd,\n            session_metrics.session_partition_max_session_engaged,\n            session_metrics.session_partition_sum_engagement_time_msec,\n            session_metrics.session_number,\n            session_conversions.*\n        from session_metrics left join session_conversions using (session_partition_key)\n    )\n\n    select * from join_metrics_and_conversions\n", "relation_name": "`set-ga-reporting`.`iv_GA4`.`fct_ga4__sessions_daily`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:17.997965Z", "completed_at": "2024-01-16T17:19:18.017175Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:18.018352Z", "completed_at": "2024-01-16T17:19:18.968578Z"}], "thread_id": "Thread-36", "execution_time": 0.9723658561706543, "adapter_response": {"_message": "SELECT (1.0 rows, 30.1 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 31568922, "bytes_billed": 32505856, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "5f256cf2-b5bc-4623-a550-5d0a50049cbe", "slot_ms": 54}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_default_channel_grouping.2483b5ae6b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_default_channel_grouping\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_default_channel_grouping is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:08.101418Z", "completed_at": "2024-01-16T17:19:08.118688Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:08.119998Z", "completed_at": "2024-01-16T17:19:19.675266Z"}], "thread_id": "Thread-37", "execution_time": 11.575419664382935, "adapter_response": {"_message": "CREATE TABLE (571.5k rows, 11.9 GiB processed)", "code": "CREATE TABLE", "rows_affected": 571473, "bytes_processed": 12731422447, "bytes_billed": 12731809792, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "11fa232b-f3ef-438f-907c-0e037d5f7e71", "slot_ms": 612774}, "message": "CREATE TABLE (571.5k rows, 11.9 GiB processed)", "failures": null, "unique_id": "model.ga4.stg_ga4__client_key_first_last_pageviews", "compiled": true, "compiled_code": "\n\nwith page_views_first_last as (\n    select\n        client_key,\n        FIRST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS first_page_view_event_key,\n        LAST_VALUE(event_key) OVER (PARTITION BY client_key ORDER BY event_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS last_page_view_event_key\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view`\n    where client_key is not null -- Remove users with privacy settings enabled\n),\npage_views_by_client_key as (\n    select distinct\n        client_key,\n        first_page_view_event_key,\n        last_page_view_event_key\n    from page_views_first_last\n),\n\npage_views_joined as (\n    select\n        page_views_by_client_key.*,\n        first_page_view.page_location as first_page_location,\n        first_page_view.page_hostname as first_page_hostname,\n        first_page_view.page_referrer as first_page_referrer, \n        last_page_view.page_location as last_page_location,\n        last_page_view.page_hostname as last_page_hostname,\n        last_page_view.page_referrer as last_page_referrer\n    from page_views_by_client_key\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view` first_page_view\n        on page_views_by_client_key.first_page_view_event_key = first_page_view.event_key\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__event_page_view` last_page_view\n        on page_views_by_client_key.last_page_view_event_key = last_page_view.event_key\n)\n\nselect * from page_views_joined", "relation_name": "`set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_pageviews`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:17.651865Z", "completed_at": "2024-01-16T17:19:17.669755Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:17.670913Z", "completed_at": "2024-01-16T17:19:19.876407Z"}], "thread_id": "Thread-38", "execution_time": 2.226254463195801, "adapter_response": {"_message": "SELECT (1.0 rows, 18.7 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 19562192, "bytes_billed": 19922944, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "0a43000c-3cf4-412f-8b63-d7383b343800", "slot_ms": 1904}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_events_client_key.ed9b2aba25", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_events`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:18.973090Z", "completed_at": "2024-01-16T17:19:18.990552Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:18.991884Z", "completed_at": "2024-01-16T17:19:19.891205Z"}], "thread_id": "Thread-36", "execution_time": 0.9196820259094238, "adapter_response": {"_message": "SELECT (1.0 rows, 28.7 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 30050636, "bytes_billed": 30408704, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "67f928db-d663-47ba-b46e-7d022c921718", "slot_ms": 36}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_last_non_direct_source.449fe23be6", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect last_non_direct_source\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere last_non_direct_source is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:19.679994Z", "completed_at": "2024-01-16T17:19:19.699258Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:19.700419Z", "completed_at": "2024-01-16T17:19:20.669211Z"}], "thread_id": "Thread-37", "execution_time": 0.9909076690673828, "adapter_response": {"_message": "SELECT (1.0 rows, 28.8 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 30236937, "bytes_billed": 30408704, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "6eb0ffbd-7967-47c7-9dbe-0aa441931658", "slot_ms": 48}, "message": null, "failures": 0, "unique_id": "test.ga4.not_null_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_source.db8c720050", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect session_source\nfrom `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\nwhere session_source is null\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:19.880580Z", "completed_at": "2024-01-16T17:19:19.904907Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:19.905974Z", "completed_at": "2024-01-16T17:19:21.651870Z"}], "thread_id": "Thread-38", "execution_time": 1.772921085357666, "adapter_response": {"_message": "SELECT (1.0 rows, 107.2 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 112380660, "bytes_billed": 113246208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "c4adb4a6-a6ff-4ef5-9031-9e82f0aeae74", "slot_ms": 7062}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__sessions_traffic_sources_last_non_direct_daily_session_partition_key.5383afcda4", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:19.895064Z", "completed_at": "2024-01-16T17:19:19.913834Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:19.914920Z", "completed_at": "2024-01-16T17:19:21.938202Z"}], "thread_id": "Thread-36", "execution_time": 2.0447604656219482, "adapter_response": {"_message": "SELECT (1.0 rows, 107.3 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 112475160, "bytes_billed": 113246208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "71d61c89-36a2-429f-ab4f-c9edeaf98b5f", "slot_ms": 7641}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_fct_ga4__sessions_daily_session_partition_key.c7a2a3ef6c", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`fct_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:20.673420Z", "completed_at": "2024-01-16T17:19:20.690852Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:20.692003Z", "completed_at": "2024-01-16T17:19:22.276700Z"}], "thread_id": "Thread-37", "execution_time": 1.6054580211639404, "adapter_response": {"_message": "SELECT (1.0 rows, 14.2 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 14858298, "bytes_billed": 15728640, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "5b01c7f3-d663-464a-87cd-e3003b6adcfb", "slot_ms": 1005}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_stg_ga4__client_key_first_last_pageviews_client_key.4cb23d702f", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_pageviews`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:13.055071Z", "completed_at": "2024-01-16T17:19:13.073821Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:13.075221Z", "completed_at": "2024-01-16T17:19:23.227706Z"}], "thread_id": "Thread-39", "execution_time": 10.174088954925537, "adapter_response": {"_message": "CREATE TABLE (3.1m rows, 23.5 GiB processed)", "code": "CREATE TABLE", "rows_affected": 3112627, "bytes_processed": 25235796049, "bytes_billed": 25236078592, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "8e67df6b-b547-462e-bcd7-49c441905795", "slot_ms": 1445215}, "message": "CREATE TABLE (3.1m rows, 23.5 GiB processed)", "failures": null, "unique_id": "model.ga4.dim_ga4__sessions", "compiled": true, "compiled_code": "-- Dimension table for sessions based on the first event that isn't session_start or first_visit.\nwith session_first_event as \n(\n    select *\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where event_name != 'first_visit' \n    and event_name != 'session_start'\n    qualify row_number() over(partition by session_key order by event_timestamp) = 1\n),\n session_start_dims as (\n    select \n        session_key,\n        event_date_dt as session_start_date,\n        event_timestamp as session_start_timestamp,\n        page_path as landing_page_path,\n        page_location as landing_page,\n        page_hostname as landing_page_hostname,\n        page_referrer as landing_page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        session_number,\n        session_number = 1 as is_first_session,\n        user_campaign,\n        user_medium,\n        user_source,\n    from session_first_event\n),\njoin_traffic_source as (\n    select \n        session_start_dims.*,\n        sessions_traffic_sources.session_source,\n        sessions_traffic_sources.session_medium,\n        sessions_traffic_sources.session_campaign,\n        sessions_traffic_sources.session_content,\n        sessions_traffic_sources.session_term,\n        sessions_traffic_sources.session_default_channel_grouping,\n        sessions_traffic_sources.session_source_category\n    from session_start_dims\n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources` sessions_traffic_sources using (session_key)\n),\ninclude_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\nselect * from include_session_properties", "relation_name": "`set-ga-reporting`.`iv_GA4`.`dim_ga4__sessions`"}, {"status": "error", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:21.942855Z", "completed_at": "2024-01-16T17:19:21.962346Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:21.963588Z", "completed_at": "2024-01-16T17:19:23.928997Z"}], "thread_id": "Thread-36", "execution_time": 1.9886503219604492, "adapter_response": {}, "message": "Database Error in model fct_ga4__sessions (models/marts/core/fct_ga4__sessions.sql)\n  Unrecognized name: view_item_count at [28:19]\n  compiled Code at iv_GA4/run/ga4/models/marts/core/fct_ga4__sessions.sql", "failures": null, "unique_id": "model.ga4.fct_ga4__sessions", "compiled": true, "compiled_code": "-- Stay mindful of performance/cost when using this model. Making this model partitioned on date is not possible because there's no way to create a single record per session AND partition on date. \n\nselect\n    client_key,\n    session_key,\n    stream_id,\n    max(user_id) as user_id,\n    min(session_partition_min_timestamp) as session_start_timestamp,\n    min(session_partition_date) as session_start_date,\n    sum(session_partition_count_page_views) as count_pageviews,\n    sum(session_partition_sum_event_value_in_usd) as sum_event_value_in_usd,\n    max(session_partition_max_session_engaged) as is_session_engaged,\n    sum(session_partition_sum_engagement_time_msec) as sum_engaged_time_msec,\n    min(session_number) as session_number\n    \n        \n            , sum(view_item_count) as count_view_item\n        \n            , sum(add_to_cart_count) as count_add_to_cart\n        \n            , sum(begin_checkout_count) as count_begin_checkout\n        \n            , sum(complete_registration_count) as count_complete_registration\n        \n            , sum(add_payment_info_count) as count_add_payment_info\n        \n            , sum(subscribe_count) as count_subscribe\n        \n            , sum(purchase_count) as count_purchase\n        \n    \nfrom `set-ga-reporting`.`iv_GA4`.`fct_ga4__sessions_daily`\ngroup by 1,2,3", "relation_name": "`set-ga-reporting`.`iv_GA4`.`fct_ga4__sessions`"}, {"status": "skipped", "timing": [], "thread_id": "Thread-36", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__sessions_session_key.93f6a798f0", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-36", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__client_keys", "compiled": false, "compiled_code": null, "relation_name": "`set-ga-reporting`.`iv_GA4`.`fct_ga4__client_keys`"}, {"status": "skipped", "timing": [], "thread_id": "Thread-36", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__client_keys_client_key.47115ed1b5", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "skipped", "timing": [], "thread_id": "Thread-36", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.ga4.fct_ga4__user_ids", "compiled": false, "compiled_code": null, "relation_name": "`set-ga-reporting`.`iv_GA4`.`fct_ga4__user_ids`"}, {"status": "skipped", "timing": [], "thread_id": "Thread-36", "execution_time": 0.0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.ga4.unique_fct_ga4__user_ids_md5_user_id_or_client_key_stream_id_.dcd4dac43e", "compiled": false, "compiled_code": null, "relation_name": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:23.232373Z", "completed_at": "2024-01-16T17:19:23.251380Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:23.252684Z", "completed_at": "2024-01-16T17:19:24.943856Z"}], "thread_id": "Thread-39", "execution_time": 1.7130482196807861, "adapter_response": {"_message": "SELECT (1.0 rows, 77.2 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 80928276, "bytes_billed": 81788928, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "5e9358f4-4fb0-4696-ade2-fda2500a96dd", "slot_ms": 6483}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_dim_ga4__sessions_session_key.5ade237063", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`dim_ga4__sessions`\n  where session_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:22.283168Z", "completed_at": "2024-01-16T17:19:22.307903Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:22.309669Z", "completed_at": "2024-01-16T17:19:32.636671Z"}], "thread_id": "Thread-37", "execution_time": 10.355059385299683, "adapter_response": {"_message": "CREATE TABLE (752.4k rows, 547.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 752392, "bytes_processed": 573971757, "bytes_billed": 574619648, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "b2d55276-bc76-459f-b0d1-d94be7fd6294", "slot_ms": 30364}, "message": "CREATE TABLE (752.4k rows, 547.4 MiB processed)", "failures": null, "unique_id": "model.ga4.dim_ga4__client_keys", "compiled": true, "compiled_code": "-- Mart for dimensions related to user devices (based on client_key)\n\nwith include_first_last_events as (\n    select \n        *\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_events`\n),\ninclude_first_last_page_views as (\n    select \n        include_first_last_events.*,\n        first_last_page_views.first_page_location,\n        first_last_page_views.first_page_hostname,\n        first_last_page_views.first_page_referrer,\n        first_last_page_views.last_page_location,\n        first_last_page_views.last_page_hostname,\n        first_last_page_views.last_page_referrer\n    from include_first_last_events \n    left join `set-ga-reporting`.`iv_GA4`.`stg_ga4__client_key_first_last_pageviews` as first_last_page_views using (client_key)\n),\ninclude_user_properties as (\n    \n\nselect * from include_first_last_page_views\n\n\n\n)\n\nselect * from include_user_properties", "relation_name": "`set-ga-reporting`.`iv_GA4`.`dim_ga4__client_keys`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:32.641335Z", "completed_at": "2024-01-16T17:19:32.659014Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:32.660131Z", "completed_at": "2024-01-16T17:19:34.276965Z"}], "thread_id": "Thread-36", "execution_time": 1.6372170448303223, "adapter_response": {"_message": "SELECT (1.0 rows, 18.7 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 19562192, "bytes_billed": 19922944, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "8b35d82f-b415-4b62-9013-9f0956253f43", "slot_ms": 1905}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_dim_ga4__client_keys_client_key.971e8b17de", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select client_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`dim_ga4__client_keys`\n  where client_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:21.656328Z", "completed_at": "2024-01-16T17:19:21.697135Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:21.698552Z", "completed_at": "2024-01-16T17:19:34.945118Z"}], "thread_id": "Thread-38", "execution_time": 13.290211200714111, "adapter_response": {"_message": "MERGE (539.8k rows, 2.0 GiB processed)", "code": "MERGE", "rows_affected": 539764, "bytes_processed": 2176354873, "bytes_billed": 2176843776, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "739007e2-7506-41de-bbd7-f3fbe41b27ce", "slot_ms": 213117}, "message": "MERGE (539.8k rows, 2.0 GiB processed)", "failures": null, "unique_id": "model.ga4.dim_ga4__sessions_daily", "compiled": true, "compiled_code": "\n\n    \n\n    \n\n    \n\n\n\n\nwith event_dimensions as \n(\n    select \n        client_key,\n        session_key,\n        session_partition_key,\n        event_date_dt as session_partition_date,\n        event_timestamp,\n        page_path,\n        page_location,\n        page_hostname,\n        page_referrer,\n        geo_continent,\n        geo_country,\n        geo_region,\n        geo_city,\n        geo_sub_continent,\n        geo_metro,\n        stream_id,\n        platform,\n        device_category,\n        device_mobile_brand_name,\n        device_mobile_model_name,\n        device_mobile_marketing_name,\n        device_mobile_os_hardware_model,\n        device_operating_system,\n        device_operating_system_version,\n        device_vendor_id,\n        device_advertising_id,\n        device_language,\n        device_is_limited_ad_tracking,\n        device_time_zone_offset_seconds,\n        device_browser,\n        device_web_info_browser,\n        device_web_info_browser_version,\n        device_web_info_hostname,\n        user_campaign,\n        user_medium,\n        user_source,\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__events`\n    where event_name != 'first_visit' \n    and event_name != 'session_start'\n    \n            and event_date_dt in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n    \n)\n,traffic_sources as (\n    select \n        session_partition_key,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from `set-ga-reporting`.`iv_GA4`.`stg_ga4__sessions_traffic_sources_last_non_direct_daily`\n    where 1=1\n    \n            and session_partition_date in (current_date,date_sub(current_date, interval 1 day),date_sub(current_date, interval 2 day),date_sub(current_date, interval 3 day))\n     \n)\n\n,session_dimensions as \n(\n    select    \n        distinct -- Distinct call will, in effect, group by session_partition_key\n        stream_id\n        ,session_key\n        ,session_partition_key\n        ,session_partition_date\n        ,FIRST_VALUE(event_timestamp IGNORE NULLS) OVER (session_partition_window) AS session_partition_start_timestamp\n        ,FIRST_VALUE(page_path IGNORE NULLS) OVER (session_partition_window) AS landing_page_path\n        ,FIRST_VALUE(page_location IGNORE NULLS) OVER (session_partition_window) AS landing_page_location\n        ,FIRST_VALUE(page_hostname IGNORE NULLS) OVER (session_partition_window) AS landing_page_hostname\n        ,FIRST_VALUE(page_referrer IGNORE NULLS) OVER (session_partition_window) AS referrer\n        ,FIRST_VALUE(geo_continent IGNORE NULLS) OVER (session_partition_window) AS geo_continent\n        ,FIRST_VALUE(geo_country IGNORE NULLS) OVER (session_partition_window) AS geo_country\n        ,FIRST_VALUE(geo_region IGNORE NULLS) OVER (session_partition_window) AS geo_region\n        ,FIRST_VALUE(geo_city IGNORE NULLS) OVER (session_partition_window) AS geo_city\n        ,FIRST_VALUE(geo_sub_continent IGNORE NULLS) OVER (session_partition_window) AS geo_sub_continent\n        ,FIRST_VALUE(geo_metro IGNORE NULLS) OVER (session_partition_window) AS geo_metro\n        ,FIRST_VALUE(platform IGNORE NULLS) OVER (session_partition_window) AS platform\n        ,FIRST_VALUE(device_category IGNORE NULLS) OVER (session_partition_window) AS device_category\n        ,FIRST_VALUE(device_mobile_brand_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_brand_name\n        ,FIRST_VALUE(device_mobile_model_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_model_name\n        ,FIRST_VALUE(device_mobile_marketing_name IGNORE NULLS) OVER (session_partition_window) AS device_mobile_marketing_name\n        ,FIRST_VALUE(device_mobile_os_hardware_model IGNORE NULLS) OVER (session_partition_window) AS device_mobile_os_hardware_model\n        ,FIRST_VALUE(device_operating_system IGNORE NULLS) OVER (session_partition_window) AS device_operating_system\n        ,FIRST_VALUE(device_operating_system_version IGNORE NULLS) OVER (session_partition_window) AS device_operating_system_version\n        ,FIRST_VALUE(device_vendor_id IGNORE NULLS) OVER (session_partition_window) AS device_vendor_id\n        ,FIRST_VALUE(device_advertising_id IGNORE NULLS) OVER (session_partition_window) AS device_advertising_id\n        ,FIRST_VALUE(device_language IGNORE NULLS) OVER (session_partition_window) AS device_language\n        ,FIRST_VALUE(device_is_limited_ad_tracking IGNORE NULLS) OVER (session_partition_window) AS device_is_limited_ad_tracking\n        ,FIRST_VALUE(device_time_zone_offset_seconds IGNORE NULLS) OVER (session_partition_window) AS device_time_zone_offset_seconds\n        ,FIRST_VALUE(device_browser IGNORE NULLS) OVER (session_partition_window) AS device_browser\n        ,FIRST_VALUE(device_web_info_browser IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser\n        ,FIRST_VALUE(device_web_info_browser_version IGNORE NULLS) OVER (session_partition_window) AS device_web_info_browser_version\n        ,FIRST_VALUE(device_web_info_hostname IGNORE NULLS) OVER (session_partition_window) AS device_web_info_hostname\n        ,FIRST_VALUE(user_campaign IGNORE NULLS) OVER (session_partition_window) AS user_campaign\n        ,FIRST_VALUE(user_medium IGNORE NULLS) OVER (session_partition_window) AS user_medium\n        ,FIRST_VALUE(user_source IGNORE NULLS) OVER (session_partition_window) AS user_source\n        from event_dimensions\n    WINDOW session_partition_window AS (PARTITION BY session_partition_key ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\n)\n,join_traffic_source as (\n    select \n        session_dimensions.*,\n        session_source,\n        session_medium,\n        session_campaign,\n        session_content,\n        session_term,\n        session_default_channel_grouping,\n        session_source_category,\n        -- last non-direct traffic sources\n        last_non_direct_source,\n        last_non_direct_medium,\n        last_non_direct_campaign,\n        last_non_direct_content,\n        last_non_direct_term,\n        last_non_direct_default_channel_grouping,\n        last_non_direct_source_category\n    from session_dimensions\n    left join traffic_sources sessions_traffic_sources using (session_partition_key)\n)\n,join_session_properties as (\n    select \n        * \n    from join_traffic_source\n    \n)\n\n-- Collapse \nselect distinct * from join_session_properties", "relation_name": "`set-ga-reporting`.`iv_GA4`.`dim_ga4__sessions_daily`"}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2024-01-16T17:19:34.950322Z", "completed_at": "2024-01-16T17:19:34.974574Z"}, {"name": "execute", "started_at": "2024-01-16T17:19:34.975920Z", "completed_at": "2024-01-16T17:19:36.658293Z"}], "thread_id": "Thread-37", "execution_time": 1.709836721420288, "adapter_response": {"_message": "SELECT (1.0 rows, 107.2 MiB processed)", "code": "SELECT", "rows_affected": 1, "bytes_processed": 112380660, "bytes_billed": 113246208, "location": "europe-west2", "project_id": "set-ga-reporting", "job_id": "17c9d891-f6da-4fe0-abd2-1463e895982f", "slot_ms": 7082}, "message": null, "failures": 0, "unique_id": "test.ga4.unique_dim_ga4__sessions_daily_session_partition_key.e40d884a13", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select session_partition_key as unique_field\n  from `set-ga-reporting`.`iv_GA4`.`dim_ga4__sessions_daily`\n  where session_partition_key is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 58.343088150024414, "args": {"exclude": [], "defer": false, "print": true, "send_anonymous_usage_stats": true, "log_format": "json", "printer_width": 80, "static_parser": true, "project_dir": "/usr/src/develop/user-187474/environment-278010/repository-199827", "use_colors": true, "profiles_dir": "/usr/src/dbt-server-shared/.dbt", "partial_parse": true, "select": [], "indirect_selection": "eager", "profile": "user", "cache_selected_only": false, "resource_types": [], "log_path": "/usr/src/dbt-server-shared/working_dir/31dc4a8f-bb5e-4ad1-96d0-98be62e8bbb0", "populate_cache": true, "warn_error_options": {"include": [], "exclude": []}, "show": false, "use_colors_file": true, "version_check": true, "include_saved_query": false, "invocation_command": "dbt -A dbt_worker.app worker --loglevel=DEBUG --concurrency=2 --max-memory-per-child=500000", "partial_parse_file_diff": true, "log_level": "info", "show_resource_report": false, "macro_debugging": false, "strict_mode": false, "enable_legacy_logger": false, "vars": {}, "log_level_file": "debug", "quiet": false, "log_format_file": "json", "introspect": true, "which": "build", "write_json": true, "log_file_max_bytes": 0, "favor_state": false}}